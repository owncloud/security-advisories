{
    "Title": "Disclosure of arbitrary certificate files",
    "Timestamp": 1468368000,
    "Type": "Insecure Direct Object References",
    "Risk": 1,
    "CVSS3": {
        "score": 2.6,
        "vector": "AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:N"
    },
    "CWE": {
        "id": 610,
        "name": "Externally Controlled Reference to a Resource in Another Sphere"
    },
    "Affected": [
        {
            "Version": "7.0.14",
            "CVE": "CVE-2016-xxxx",
            "Operator": "<",
            "Commits": [
                "core/9d5005c795c99ba1ef516035542e15157931292a"
            ]
        },
        {
            "Version": "8.0.12",
            "CVE": "CVE-2016-xxxx",
            "Operator": "<",
            "Commits": [
                "core/9cdb8817258e62917c78765efc127247eb181b87"
            ]
        },
        {
            "Version": "8.1.7",
            "CVE": "CVE-2016-xxxx",
            "Operator": "<",
            "Commits": [
                "core/80db6c60a3916175feee775970988c8cc8c0f49f"
            ]
        },
        {
            "Version": "8.2.4",
            "CVE": "CVE-2016-xxxx",
            "Operator": "<",
            "Commits": [
                "core/d3f585c329c0291b208dc54d75b4aecb7118ff8d"
            ]
        },
        {
            "Version": "9.0.2",
            "CVE": "CVE-2016-xxxx",
            "Operator": "<",
            "Commits": [
                "core/830a080f0e4b67d6265ba09ab578060945f28916"
            ]
        }
    ],
    "Description": "The 'Import root certificate' ability that users are able to use once files_external is enabled allows users to import their own root certificates for connections. (e.g. server-to-server shares to servers using a self-signed certificate or external storages)<br>The functionality was using the PHP OpenSSL parsing functions for parsing these certificate files. Namely, `openssl_pkey_get_public` and `openssl_x509_parse`. It turned out that these internally call `php_openssl_x509_from_zval` which allow passing in a file:///<br>Therefore an attacker could pass a file beginning with `file://` and ownCloud would try to parse the corresponding file. This leads to a disclosure of arbitrary certificate files if the adversary can guess the correct path.",
    "ActionTaken": "ownCloud is now preventing files that being with 'file://' from being parsed.",
    "Acknowledgment":[
        {
            "Name":"Lukas Reschke",
            "Reason":"Vulnerability discovery and disclosure.",
            "HoF": true
        }
    ]
}
